[
  {
    "id": "project-1",
    "slug": "e-commerce-platform",
    "title": "E-Commerce Platform",
    "description": "A full-featured e-commerce platform with product management, cart functionality, payment processing, and order tracking.",
    "longDescription": "This e-commerce platform was built from the ground up to provide a seamless shopping experience. It features a responsive design, real-time inventory updates, secure payment processing with Stripe, comprehensive admin dashboard for product and order management, user authentication and profiles, wishlist functionality, and detailed analytics for business insights. The platform was optimized for performance with server-side rendering and efficient data caching strategies.",
    "thumbnailUrl": "/api/placeholder?width=600&height=400&text=E-Commerce&color=0070F3&textColor=FFFFFF",
    "imageUrls": [
      "/api/placeholder?width=800&height=600&text=E-Commerce-1&color=0070F3&textColor=FFFFFF",
      "/api/placeholder?width=800&height=600&text=E-Commerce-2&color=0070F3&textColor=FFFFFF",
      "/api/placeholder?width=800&height=600&text=E-Commerce-3&color=0070F3&textColor=FFFFFF"
    ],
    "technologies": ["React", "Node.js", "Express", "MongoDB", "Redux", "Stripe API", "AWS S3", "Docker"],
    "category": ["Web Development", "Full Stack", "E-Commerce"],
    "githubUrl": "https://github.com",
    "liveUrl": "https://example.com",
    "featured": true,
    "startDate": "2021-03-01",
    "endDate": "2021-07-15",
    "role": "Lead Developer",
    "challenges": [
      "Implementing real-time inventory management across multiple stores",
      "Ensuring secure payment processing with PCI compliance",
      "Optimizing performance for image-heavy product listings"
    ],
    "solutions": [
      "Utilized WebSockets for real-time updates to inventory levels",
      "Implemented Stripe's secure elements for handling sensitive payment data",
      "Created a custom image optimization pipeline with lazy loading and CDN distribution"
    ]
  },
  {
    "id": "project-2",
    "slug": "task-management-system",
    "title": "Task Management System",
    "description": "A collaborative task management application with real-time updates, team workspaces, and progress tracking.",
    "longDescription": "This task management system was designed to improve team productivity by providing intuitive collaboration features. Users can create personal and team workspaces, assign tasks with priority levels, set deadlines, track progress through customizable dashboards, and receive notifications for important updates. The system includes time tracking, file attachments, commenting, and integration with popular calendar apps.",
    "thumbnailUrl": "/api/placeholder?width=600&height=400&text=Task-Manager&color=6D28D9&textColor=FFFFFF",
    "imageUrls": [
      "/api/placeholder?width=800&height=600&text=Task-Manager-1&color=6D28D9&textColor=FFFFFF",
      "/api/placeholder?width=800&height=600&text=Task-Manager-2&color=6D28D9&textColor=FFFFFF"
    ],
    "technologies": ["React", "TypeScript", "Firebase", "Material UI", "Redux", "PWA"],
    "category": ["Web Application", "SaaS", "Productivity"],
    "githubUrl": "https://github.com",
    "liveUrl": "https://example.com",
    "featured": true,
    "startDate": "2020-09-15",
    "endDate": "2021-01-30",
    "role": "Frontend Developer",
    "challenges": [
      "Creating a responsive and intuitive UI for complex task relationships",
      "Implementing real-time collaboration without performance degradation",
      "Building a flexible permission system for different user roles"
    ],
    "solutions": [
      "Designed a drag-and-drop interface with clear visual hierarchies",
      "Used Firebase Realtime Database with efficient data structuring",
      "Implemented a granular role-based access control system"
    ]
  },
  {
    "id": "project-3",
    "slug": "health-fitness-tracker",
    "title": "Health & Fitness Tracker",
    "description": "A mobile app for tracking fitness activities, nutrition, and health metrics with personalized insights.",
    "longDescription": "The Health & Fitness Tracker is a comprehensive mobile application that helps users monitor their fitness journey. It provides an intuitive interface for tracking workouts, logging meals, and monitoring various health metrics like weight, heart rate, and sleep patterns. The app generates personalized insights and recommendations based on user data, helping them achieve their fitness goals more effectively. It features social sharing capabilities, challenges, and achievements to keep users motivated.",
    "thumbnailUrl": "/api/placeholder?width=600&height=400&text=Fitness-App&color=F97316&textColor=FFFFFF",
    "imageUrls": [
      "/api/placeholder?width=800&height=600&text=Fitness-App-1&color=F97316&textColor=FFFFFF",
      "/api/placeholder?width=800&height=600&text=Fitness-App-2&color=F97316&textColor=FFFFFF"
    ],
    "technologies": ["React Native", "Node.js", "Express", "MongoDB", "Chart.js", "Firebase Auth"],
    "category": ["Mobile App", "Health Tech"],
    "githubUrl": "https://github.com",
    "liveUrl": "https://example.com",
    "featured": false,
    "startDate": "2020-05-01",
    "endDate": "2020-08-30",
    "role": "Full Stack Developer",
    "challenges": [
      "Ensuring accurate data collection from various fitness devices and APIs",
      "Creating intuitive data visualizations for complex health metrics",
      "Optimizing battery usage while tracking user activities"
    ],
    "solutions": [
      "Implemented a unified data collection system with multiple API integrations",
      "Designed custom visualization components with Chart.js for different metrics",
      "Used efficient background processing techniques to minimize battery drain"
    ]
  },
  {
    "id": "project-4",
    "slug": "weather-dashboard",
    "title": "Weather Dashboard",
    "description": "A real-time weather dashboard with location-based forecasts, historical data, and customizable alerts.",
    "longDescription": "The Weather Dashboard provides users with comprehensive weather information using data from multiple meteorological sources. It features an interactive map interface, hourly and 7-day forecasts, severe weather alerts, and historical weather data analysis. Users can customize their dashboard, save favorite locations, and set up notifications for specific weather conditions. The application was built with performance and accuracy in mind, ensuring reliable weather information delivery.",
    "thumbnailUrl": "/api/placeholder?width=600&height=400&text=Weather-App&color=38BDF8&textColor=FFFFFF",
    "imageUrls": [
      "/api/placeholder?width=800&height=600&text=Weather-App-1&color=38BDF8&textColor=FFFFFF",
      "/api/placeholder?width=800&height=600&text=Weather-App-2&color=38BDF8&textColor=FFFFFF"
    ],
    "technologies": ["Vue.js", "Express", "OpenWeatherMap API", "D3.js", "Progressive Web App"],
    "category": ["Web Application", "Data Visualization"],
    "githubUrl": "https://github.com",
    "liveUrl": "https://example.com",
    "featured": false,
    "startDate": "2020-01-15",
    "endDate": "2020-03-20",
    "role": "Frontend Developer",
    "challenges": [
      "Processing and visualizing large amounts of weather data efficiently",
      "Creating an intuitive UI for complex meteorological information",
      "Ensuring the application works offline with up-to-date data"
    ],
    "solutions": [
      "Implemented data streaming and efficient caching strategies",
      "Designed a modular dashboard with customizable widgets",
      "Used service workers and IndexedDB for offline functionality"
    ]
  }
] 